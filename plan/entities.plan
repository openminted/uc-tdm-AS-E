<!--
Copyright 2017 Institut National de la Recherche Agronomique
Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at
        http://www.apache.org/licenses/LICENSE-2.0
Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License. -->
<alvisnlp-plan id="entities">

	<param name="readPubMedcorpus">
		<alias module="readPubMed" param="sourcePath"/>
	</param>

	<param name="readhtmlannotated">
		<alias module="analyze" param="sourcePath"/>
	</param>

	<param name="readWoKcorpus">
		<alias module="readWoKcorpus" param="source"/>
	</param>


	<sequence id="read">
<!-- ******* -->
<!--PubMed corpus reading-->
<!-- *******  -->
		<module id="readPubMed" class="XMLReader">
			<sourcePath>../alvisir2_corpus/pubmed_result-2.xml</sourcePath>
			<xslTransform>configuration/pubmed2alvisnlp.xslt</xslTransform>
		</module>
		<module id="renametitlehtmlPubMed" class="Action">
			<target>documents.sections:title</target>
			<action>set:feat:sectionname("title")</action>
			<setFeatures/>
		</module>
		<module id="renameabstracthtmlPubMed" class="Action">
			<target>documents.sections:abstract</target>
			<action>set:feat:sectionname("abstract")</action>
			<setFeatures/>
		</module>
		<module id="renamecontenthtmlPubMed" class="Action">
			<target>documents.sections:alltext</target>
			<action>set:feat:sectionname("alltext")</action>
			<setFeatures/>
		</module>
		<module id="renamedocumentPubmed" class="Action">
			<target>documents</target>
			<action>set:feat:identifiant(@id)</action>
			<setFeatures/>
		</module>
<!-- ******* -->
<!--Web of Knowledge corpus reading (.txt format)-->
<!-- *******  -->
		<module id="readWoKcorpus" class="WebOfKnowledgeReader">
			<source>../alvisir2_corpus/listeriawok.txt </source>
			<constantDocumentFeatures>source=wok,url=https://doi.org/</constantDocumentFeatures>
		</module>
		<module id="renamedocumentWOK" class="Action">
			<target>documents</target>
			<action>set:feat:identifiant(@id)</action>
			<setFeatures/>
		</module>
		<module id="renameDIWOK" class="Action">
			<target>documents[@source == "wok"]</target>
			<action>set:feat:doi(@DI)</action>
			<setFeatures/>
		</module>
		<module id="renametitleWOK" class="Action">
			<target>documents.sections:TI</target>
			<action>set:feat:sectionname("title")</action>
			<setFeatures/>
		</module>
		<module id="renamejournalWOK" class="Action">
			<target>documents.sections:JI</target>
			<action>set:feat:sectionname("journal")</action>
			<setFeatures/>
		</module>
		<module id="renameyearWOK" class="Action">
			<target>documents.sections:PY</target>
			<action>set:feat:sectionname("year")</action>
			<setFeatures/>
		</module>
		<module id="renamedoiWOK" class="Action">
			<target>documents.sections:DI</target>
			<action>set:feat:sectionname("doi")</action>
			<setFeatures/>
		</module>
		<module id="completeurlwok" class="Action">
			<target>documents[@source == "wok"]</target>
			<action>set:feat:url(@url ^ @doi)</action>
			<setFeatures/>
		</module>
		<module id="renameabstractWOK" class="Action">
			<target>documents.sections:AB</target>
			<action>set:feat:sectionname("abstract")</action>
			<setFeatures/>
		</module>
<!-- Manual annotated corpus reading (full text, html format)-->
<!-- *******  -->
		<module id="readhtmlannotated" class="XMLReader">
			<sourcePath>../alvisir2_corpus/fulltext/html</sourcePath>
			<xslTransform>configuration/html2alvisnlp.xslt</xslTransform>
			<constantDocumentFeatures>source=html,url=https://www.ncbi.nlm.nih.gov/pubmed/</constantDocumentFeatures>
		</module>
		<module id="completeurlhtml" class="Action">
			<target>documents[@source == "html"]</target>
			<action>set:feat:url(@url ^ @id)</action>
			<setFeatures/>
		</module>
		<module id="renametitlehtml" class="Action">
			<target>documents.sections:title</target>
			<action>set:feat:sectionname("title")</action>
			<setFeatures/>
		</module>
		<module id="renameabstracthtml" class="Action">
			<target>documents.sections:abstract</target>
			<action>set:feat:sectionname("abstract")</action>
			<setFeatures/>
		</module>
		<module id="renamecontenthtml" class="Action">
			<target>documents.sections:alltext</target>
			<action>set:feat:sectionname("alltext")</action>
			<setFeatures/>
		</module>
		<module id="renamedocumenthtml" class="Action">
			<target>documents</target>
			<action>set:feat:ID(@id)</action>
			<setFeatures/>
		</module>
		<module id="sections" class="TabularExport">
			<outDir>output</outDir>
			<files>$</files>
			<fileName>"sectionsWOK+PubMed.txt"</fileName>
			<lines>documents</lines>
			<columns>	
				@identifiant, 
				<!-- @sectionname,contents -->
				str:diacritics(str:normalizeSpace(document.sections[@sectionname == "title"].contents)),
				<!-- document.sections:abstract.contents,-->
				document.@doi			
			</columns>
		</module>
	</sequence>

<!-- ******* -->
<!--Name entity recognition-->
<!-- *******  -->
	<sequence id="stanford">
		<module id="stanford" class="StanfordNER">
			<classifierFile>/alvisnlp/psoft/stanford-ner-2014-06-16/classifiers/english.all.3class.distsim.crf.ser.gz</classifierFile>
			<labelFeatureName>Namelabel</labelFeatureName>
			<targetLayerName>stanford</targetLayerName>
			<searchInContents/>
		</module>
		<module id="persons" class="Action">
			<target>documents.sections.layer:stanford[@Namelabel == "PERSON"]</target>
			<action>add:persons</action>
			<addToLayer/>
		</module>
	</sequence>

<!-- ******* -->
<!--projection of lexicon words on the text-->
<!-- *******  -->
	<sequence id="named-entities">
	<!-- *******  -->
	<!-- Projection of proteins and genes from the lexicon on the text -->
	<!-- *******  -->
		<module id="protein" class="TabularProjector">
			<dictFile>resources/gene_aliases_20130831_TAIR_extended.txt</dictFile>
			<targetLayerName>protein1</targetLayerName>
			<valueFeatures>locus_name,symbol,full_name</valueFeatures>
			<caseInsensitive>true</caseInsensitive>
			<keyIndex>0,1,2</keyIndex>
			<!-- <allowJoined>true</allowJoined> -->
			<!-- <joinDash>true</joinDash> -->
			<constantAnnotationFeatures>ne-type=Protein</constantAnnotationFeatures>
			<!-- <skipConsecutiveWhitespaces>true</skipConsecutiveWhitespaces> -->
		</module>
		<module id="merge_protein" class="MergeLayers">
			<sourceLayerNames>protein1,protein2,protein3</sourceLayerNames>
			<targetLayerName>Protein</targetLayerName>
		</module>
		<module id="overlapsprotein" class="RemoveOverlaps">
			<layerName>Protein</layerName>
		</module>
		<module id="gene" class="Action">
			<target>documents.sections.layer:Protein[outside:html[@tag == "em" or @tag == "i"]]</target>
			<action>remove:Protein | add:gene1 | set:feat:ne-type("Gene")</action>
			<removeFromLayer/>
			<addToLayer/>
			<setFeatures/>
			<constantAnnotationFeatures>ne-type=Gene</constantAnnotationFeatures>
		</module>
		<module id="gene-italic" class="Action">
			<target>documents.sections.layer:Protein[outside:html[@tag == "em" or @tag == "i"]]</target>
			<action>remove:Protein | add:Gene | set:feat:ne-type("Gene")</action>
			<removeFromLayer/>
			<addToLayer/>
			<setFeatures/>
			<constantAnnotationFeatures>ne-type=Gene</constantAnnotationFeatures>
		</module>
	<!-- *******  -->
	<!-- Projection of proteins and genes  families from the lexicon on the text -->
	<!-- *******  -->
		<module id="Protein_family" class="TabularProjector">
			<dictFile>resources/gene_families_lexicon.txt</dictFile>
			<targetLayerName>Protein_family</targetLayerName>
			<valueFeatures>Protein_family_name</valueFeatures>
			<keyIndex>0</keyIndex>
			<skipEmpty>true</skipEmpty>
			<constantAnnotationFeatures>ne-type=Protein_family</constantAnnotationFeatures>
		</module>
		<module id="overlapsprotein-family" class="RemoveOverlaps">
			<layerName>Protein_family</layerName>
		</module>
		<module id="Gene_family" class="Action">
			<target>documents.sections.layer:Protein_family[outside:html[@tag == "em" or @tag == "i"]]</target>
			<action>remove:Protein_family | add:Gene_family | set:feat:ne-type("Gene_family")|set:feat:Gene_family_name(@Protein_family_name)</action>
			<removeFromLayer/>
			<addToLayer/>
			<setFeatures/>
			<constantAnnotationFeatures>ne-type=Gene_family</constantAnnotationFeatures>
		</module>
		<module id="overlapsgene-family" class="RemoveOverlaps">
			<layerName>Gene_family</layerName>
		</module>
	<!-- *******  -->
	<!-- Projection of RNA from the lexicon on the text -->
	<!-- *******  -->
		<module id="RNAmiRTarBase" class="TabularProjector">
			<dictFile>resources/ath_MTI_extended.txt</dictFile>
			<targetLayerName>rna1</targetLayerName>
			<valueFeatures>miRTarBaseID,miRNA,miRNAcut,Species(miRNA),TargetGene,TargetGene(EntrezID),Species(TargetGene),Experiments,SupportType,References(PMID)</valueFeatures>
			<caseInsensitive>true</caseInsensitive>
			<keyIndex>0,1,2</keyIndex>
			<constantAnnotationFeatures>ne-type=RNA</constantAnnotationFeatures>
		</module>
		<module id="mergerna" class="MergeLayers">
			<sourceLayerNames>rna1,rna2,rna3</sourceLayerNames>
			<targetLayerName>RNA</targetLayerName>
		</module>
		<module id="renamerna" class="Action">
			<target>documents.sections.layer:RNA</target>
			<action>set:feat:ne-type("RNA")</action>
			<setFeatures/>
		</module>
		<module id="overlapsrna" class="RemoveOverlaps">
			<layerName>RNA</layerName>
		</module>
	<!-- *******  -->
	<!-- Projection of stop words from the lexicon on the text -->
	<!-- *******  -->
		<module id="stopwordsprojector" class="TabularProjector">
			<dictFile>resources/stopwords_EN.txt</dictFile>
			<targetLayerName>stopwords</targetLayerName>
			<valueFeatures>stopwords</valueFeatures>
			<constantAnnotationFeatures>ne-type=stopwords</constantAnnotationFeatures>
			<caseInsensitive>true</caseInsensitive>
		</module>
		<module id="stopwords" class="Action">
			<target>documents.sections.layer:Protein[span:stopwords] | documents.sections.layer:Gene[span:stopwords] | documents.sections.layer:Gene_family[span:stopwords] | documents.sections.layer:Protein_family[span:stopwords] | documents.sections.layer:RNA[span:stopwords] </target>
			<action>delete</action>
			<deleteElements/>
		</module>
		<module id="standfordwords" class="Action">
			<target>documents.sections.layer:Protein[span:persons] | documents.sections.layer:Gene[span:persons] | documents.sections.layer:Gene_family[span:persons] | documents.sections.layer:Protein_family[span:persons] | documents.sections.layer:RNA[span:persons] </target>
			<action>delete</action>
			<deleteElements/>
		</module>
	<!-- *******  -->
	<!-- Detection of bibliographic references -->
	<!-- *******  -->
		<module id="refbiblio" class="RegExp">
			<!--type (ABD ., et al 2000)-->
			<pattern>\(([\p{L}-\s\u00a0\.,]+[\s\u00a0]\d{4}[a-zA-Z]?[\u00a0\s;]*)+?\)</pattern>
			<!--		<pattern>\(\w[^\)&lt;&gt;=\/\\]*?\s\d{4}[^\)&lt;&gt;=\/\\]*?\)</pattern> -->
			<targetLayerName>refbiblio</targetLayerName>
			<constantAnnotationFeatures>ne-type=refbiblio</constantAnnotationFeatures>
		</module>
	<!-- *******  -->
	<!-- transformation Gene to Gentoype -->
	<!-- *******  -->
		<module id="genotype-lowercase" class="Action">
			<target>documents.sections.layer:Gene[@form =~"^[a-z]+[0-9]?"]</target>
			<action>remove:Gene | add:Genotype | set:feat:ne-type("Genotype")</action>
			<removeFromLayer/>
			<addToLayer/>
			<setFeatures/>
			<constantAnnotationFeatures>ne-type=Genotype</constantAnnotationFeatures>
		</module>
		<module id="genotype2-lowercase" class="Action">
			<target>documents.sections.layer:Protein[@form =~"^[a-z]+[0-9]?"]</target>
			<action>remove:Protein | add:Genotype | set:feat:ne-type("Genotype")</action>
			<removeFromLayer/>
			<addToLayer/>
			<setFeatures/>
			<constantAnnotationFeatures>ne-type=Genotype</constantAnnotationFeatures>
		</module>
		<!-- *******  -->
		<!-- Merge off fixed entities -->
		<!-- *******  -->
		<module id="merge" class="MergeLayers">
			<sourceLayerNames>Gene,Gene_family,Protein,Protein_family,RNA</sourceLayerNames>
			<targetLayerName>fixed</targetLayerName>
		</module>
		<module id="overlapsfixed" class="RemoveOverlaps">
			<layerName>fixed</layerName>
		</module>
		<module id="renamefixed" class="Action">
			<target>documents.sections.layer:fixed</target>
			<action>set:feat:pos("NN")</action>
			<setFeatures/>
		</module>
		<module id="mergeundesirable" class="MergeLayers">
			<sourceLayerNames>persons,refbiblio,stopwords</sourceLayerNames>
			<targetLayerName>fixedundesirable</targetLayerName>
		</module>
		<module id="mergeAllfixed" class="MergeLayers">
			<sourceLayerNames>fixed,fixedundesirable</sourceLayerNames>
			<targetLayerName>fixedAll</targetLayerName>
		</module>
		<module id="overlaps" class="RemoveOverlaps">
			<layerName>fixedAll</layerName>
			<!--		<removeIncluded>false</removeIncluded>-->
		</module>
	</sequence>

<!-- *******  -->
<!-- Export of fixed entities Gene and Protein -->
<!-- *******  -->
<sequence id="export-fixed-entities">
	<module id="gene1" class="TabularExport">
		<outDir>output</outDir>
		<files>$</files>
		<fileName>"gene.txt"</fileName>
		<lines>documents.sections.layer:Gene</lines>
		<columns separator=";">
			<element>section.document.@identifiant</element>
			<element>@ne-type</element>
			<element>@form</element>
			<element>@locus_name</element>
			<element>start ^ "-" ^ end</element>
			<element>section.@sectionname</element>
			<element>"http://bibliome.jouy.inra.fr/demo/seedev/alvisir-devel/webapi/search?q="^@locus_name</element>
		</columns>
		<headers>
			"DOCID",
			"EntityType",
			"Form",
			"Normalisation",
			"Offset",
			"Section name",
			"URL"
		</headers>
	</module>
	<module id="protein1" class="TabularExport">
		<outDir>output</outDir>
		<files>$</files>
		<fileName>"gene.txt"</fileName>
		<append/>
		<lines>documents.sections.layer:Protein</lines>
		<columns separator=";">
			<element>section.document.@identifiant</element>
			<element>@ne-type</element>
			<element>@form</element>
			<element>@locus_name</element>
			<element>start ^ "-" ^ end</element>
			<element>section.@sectionname</element>
			<element>"http://bibliome.jouy.inra.fr/demo/seedev/alvisir-devel/webapi/search?q="^@locus_name</element>
		</columns>
		<append>true</append>
	</module>

</sequence>
<!--**************************************************************************************-->
<!--**************************************************************************************-->
<!--*****************Word and sentences segmentation**************************************-->
<!--**************************************************************************************-->
<!--**************************************************************************************-->
<!--**************************************************************************************-->
	<module id="words" class="WoSMig">
		<balancedPunctuations>()[]{}""</balancedPunctuations>
		<punctuations>?.!;,:-&#x2014;&#x2013;&#x2012;&#x002D;&#x2010;&#x2011;&#x00AD;&#x2015;&#x2043;&#x2212;&#x02D7;&#x207B;&#x208B;</punctuations>
		<targetLayerName>words</targetLayerName>
		<fixedFormLayerName>fixed</fixedFormLayerName>
	</module>

	<module id="sentences" class="SeSMig">
		<strongPunctuations>?.!</strongPunctuations>
		<targetLayerName>sentences</targetLayerName>
	</module>
	<module id="SentencePattern" class="PatternMatcher">
		<layerName>sentences</layerName>
		<pattern>
	[true]
	[true]? 
	[true]?       
                </pattern>
		<actions>
			<createAnnotation layer="threesent"/>
			<setFeatures ne-type="threesent"/>
		</actions>
	</module>

<!--**************************************************************************************-->
<!--**************************************************************************************-->
<!--**************************************************************************************-->
<!--*************************dash detection***********************************************-->
<!--**************************************************************************************-->
<!--**************************************************************************************-->
	<sequence id="dash list">
		<module id="dash" class="PatternMatcher">
			<layerName>words</layerName>
			<pattern> 
			[@form=~"^\\u2014$"]? 
<!-- long dash-->
			[@form=~"^\\u2013$"]? 
<!-- middle dash-->
			[@form=~"^\\u2012$"]? 
<!-- numerical dash-->
			[@form=~"^\\u002D$"]? 
<!-- minus sign-->
			[@form=~"^\\u2010$"]? 
<!-- hyphen-->
			[@form=~"^\\u2011$"]? 
<!-- unbreakable hyphen-->
			[@form=~"^\\u00AD$"]? 
<!-- conditional hyphen-->
			[@form=~"^\\u2015$"]? 
<!-- horizontal bar-->
			[@form=~"^\\u2043$"]? 
<!-- hyphenated chip-->
			[@form=~"^\\u2212$"]? 
<!-- minus sign-->
			[@form=~"^\\u02D7$"]? 
<!-- letter amending minus sign-->
			[@form=~"^\\u207B$"]? 
<!-- superscripts minus sign-->
			[@form=~"^\\u208B$"]? 
<!-- subscripts minus sign -->
			</pattern>
			<actions>
				<createAnnotation layer="Dash"/>
				<setFeatures ne-type="Dash"/>
			</actions>
			<constantAnnotationFeatures>ne-type=Dash</constantAnnotationFeatures>
		</module>
		<module id="Dash-overlaps" class="RemoveOverlaps">
			<layerName>Dash</layerName>
		</module>
	</sequence>
	<!--**************************************************************************************-->
	<!--  Pos Tagger -->
	<!--**************************************************************************************-->
	<module id="tt-pos-tag" class="TreeTagger">
		<treeTaggerExecutable>/alvisnlp/psoft/treetagger/bin/tree-tagger</treeTaggerExecutable>
		<parFile>/alvisnlp/psoft/treetagger/lib/english.par</parFile>
		<noUnknownLemma/>
	</module>
	<!--**************************************************************************************-->
	<sequence>
		<!--		<module id="GenePattern" class="PatternMatcher"><layerName>words</layerName><pattern>
        (Groupe1:[@ne-type=="Protein"])
	[true]{0,4}
        [@lemma=="gene"]
                
			</pattern><actions><addToLayer group="Groupe1" layer="gene2"/><removeAnnotations group="Groupe1" layer="Protein"/></actions></module> -->
		<!-- pass: 30mn !!! -->
		<!--		<module id="GenePattern2" class="PatternMatcher"><layerName>words</layerName><pattern>
        [@lemma=="gene"]
	[true]{0,4}
        (Groupe2:[@ne-type=="Protein"])
                
			</pattern><actions><addToLayer group="Groupe2" layer="gene3"/><removeAnnotations group="Groupe2" layer="Protein"/></actions></module> -->
		<!-- pass: 30mn !!! -->
		<module id="mergeGene" class="MergeLayers">
			<sourceLayerNames>gene1,gene2,gene3</sourceLayerNames>
			<targetLayerName>Gene</targetLayerName>
		</module>
		<module id="overlapsgene" class="RemoveOverlaps">
			<layerName>Gene</layerName>
		</module>
		<!-- ENLEVE TOUS LES Overlaps entre Gene et Protein -->
		<module id="generename" class="Action">
			<target>documents.sections.layer:Gene</target>
			<action>set:feat:ne-type("Gene")</action>
			<setFeatures/>
		</module>
		<module id="proteinrename" class="Action">
			<target>documents.sections.layer:Protein</target>
			<action>set:feat:ne-type("Protein")</action>
			<setFeatures/>
		</module>
		<module id="overlapsprotein2" class="RemoveOverlaps">
			<layerName>Protein</layerName>
		</module>
		<module id="geneandproteinoverlaps" class="Action">
			<target>documents.sections.layer:Protein[overlapping:Gene]</target>
			<action>delete</action>
			<deleteElements/>
		</module>
		<module id="geneandproteinoverlaps2" class="Action">
			<target>documents.sections.layer:Gene[overlapping:Protein]</target>
			<action>delete</action>
			<deleteElements/>
		</module>
	</sequence>
	<!--**************************************************************************************-->
	<sequence id="Proteinfamilypatterns">
		<module id="ProteinfamPattern" class="PatternMatcher">
			<layerName>words</layerName>
			<pattern>
	[@ne-type=="Protein"]
	[true]?
	[true]?      
        ([@lemma=="like"]|[@lemma=="family"])
                </pattern>
			<actions>
				<!--<addToLayer layer="Protein_family"/>-->
				<createAnnotation layer="Protein_family" />
				<setFeatures ne-type="Protein_family"/>
			</actions>
			<constantAnnotationFeatures>ne-type=Protein_family</constantAnnotationFeatures>
		</module>
		<module id="Proteinfamilylocusname" class="Action">
			<target>documents.sections.layer:Protein_family[inside:Protein]</target>
			<action>set:feat:Protein_family_name(inside:Protein.@symbol ^ "_family")</action>
			<setFeatures/>
		</module>
	</sequence>
	<sequence id="Genefamilypatterns">
		<module id="GenefamPattern" class="PatternMatcher">
			<layerName>words</layerName>
			<pattern>
	[@ne-type=="Gene"]
	[true]?
	[true]?      
        ([@lemma=="like"]|[@lemma=="family"])
                </pattern>
			<actions>
				<createAnnotation layer="Gene_family" />
				<setFeatures ne-type="Gene_family"/>
			</actions>
			<constantAnnotationFeatures>ne-type=Gene_family</constantAnnotationFeatures>
		</module>
		<module id="Genefamilylocusname" class="Action">
			<target>documents.sections.layer:Gene_family[inside:Gene]</target>
			<action>set:feat:Gene_family_name(inside:Gene.@symbol ^ "_family")</action>
			<setFeatures/>
		</module>
	</sequence>
	<!--**************************************************************************************-->
	<!--**************************************************************************************-->
	<!--***********************RELATION PREDICTION CO OCCURENCE*******************************-->
	<!--**************************************************************************************-->
	<!--**************************************************************************************-->
	<sequence id="RelationPrediction">
		<sequence id="geneandprot">
			<module id="layeraddgene" class="Action">
				<target>documents.sections.layer:Gene</target>
				<action>add:geneandprot </action>
				<setFeatures/>
				<addToLayer/>
			</module>
			<module id="layeraddprot" class="Action">
				<target>documents.sections.layer:Protein</target>
				<action>add:geneandprot </action>
<!--				| set:feat:ne-type("geneandprot")-->
				<addToLayer/>
				<setFeatures/>
			</module>
		</sequence>
		<sequence id ="Conjonction detection">
			<module id="Groupofgeneprot" class="PatternMatcher">
				<layerName>words</layerName>
				<pattern>
				[@form!="between"]
				(Conj: ([@ne-type=="Gene" or @ne-type=="Protein"]
				[@form==","]?)+
				[@form=="and"]
				[@ne-type=="Gene" or @ne-type=="Protein"])
			        </pattern>
				<actions>
					<createAnnotation group="Conj" layer="groupGandP"/>
					<setFeatures ne-type="groupGandP"/>
				</actions>
			</module>
			<module id="overlapscgroupGandP" class="RemoveOverlaps">
				<layerName>groupGandP</layerName>
			</module>
		</sequence>
	<!--**************************************************************************************-->
	<!--****************************************NEGATION**************************************-->
	<!--**************************************************************************************-->
		<sequence id ="Negation detection">
			<module id="Negation" class="PatternMatcher">
				<layerName>words</layerName>
				<pattern>
				(Negation: 
				[@ne-type=="Gene" or @ne-type=="Protein"]
				[true]{0,4}	
				[@form=="not"]
				[true]{0,4}	
				[@ne-type=="Gene" or @ne-type=="Protein"])
			        </pattern>
				<actions>
					<createAnnotation group="Negation" layer="groupNegation"/>
					<setFeatures ne-type="groupNegation"/>
				</actions>
			</module>
			
			<module id="overlapscggroupNegation" class="RemoveOverlaps">
			<layerName>groupNegation</layerName>	
			</module>
		</sequence> 
		
				
		<!--**************************************************************************************-->
		<sequence id ="groupeGandP inside groupNegation">
			
		<module id="groupeGandP-in-groupNegation" class="Action">
			<target>documents.sections.layer:groupGandP[overlapping:groupNegation]</target>
			<action>add:GandPinNegation | set:feat:ne-type("GandPinNegation")</action>
			<setFeatures/>
			<addToLayer/>
		</module>
		
		
			<module id="overlapscgGandPinNegation" class="RemoveOverlaps">
			<layerName>GandPinNegation</layerName>	
			</module>
			<module id="GandPinNegationexport" class="TabularExport">
				<outDir>output</outDir>
				<files>$</files>
				<fileName>"GandPinNegation.txt"</fileName>
				<lines>documents.sections.layer:GandPinNegation</lines>
				<columns separator=";">
					<element>section.document.@identifiant</element>
					<element>@ne-type</element>
					<element>@form</element>
					<element>start ^ "-" ^ end</element>
					<element>section.@sectionname</element>
					<element>outside:sentences</element>
				</columns>
			</module>
		</sequence> 

	<!--**************************************************************************************-->
	<!--********************************RELATION PREDICTION***********************************-->
	<!--**************************************************************************************-->
		<sequence id="interaction-relations">
			<module id="triggers" class="Action">
				<target>documents.sections.layer:words[@lemma =~ "^(interact|regulate|bind|activate|cause|encode|induce|modulate)"]</target>
				<action>add:triggers</action>
				<addToLayer/>
			</module>
			<module id="create-relation" class="Action">
				<target>documents.sections</target>
				<action>new:relation:CooccurrenceInteraction</action>
				<createRelations/>
			</module>
			<module id="create-tuples-with-trigger" class="Action">
				<target>documents.sections.layer:sentences[inside:triggers]</target>
				<action>
				  inside:geneandprot as R.
				  target.inside:geneandprot[R.@locus_name!=@locus_name] as L.
				  section.relations:CooccurrenceInteraction.new:tuple.(set:arg:geneandprotfirst(L)|set:arg:geneandprotsecond(R)|set:feat:TYPE("Interaction"))
				</action>
				<createTuples/>
				<setArguments/>
				<setFeatures/>
			</module>
			<module id="remove-double-relation" class="Action">
				<target>documents.sections.relations.tuples[(args:geneandprotfirst.start > args:geneandprotsecond.start)]</target>
				<action>delete</action>
				<deleteElements/>
			</module>
			<!-- 	-->
			<module id="removenegation" class="Action">
				<target>documents.sections.relations.tuples[(args:geneandprotfirst.outside:GandPinNegation) or (args:geneandprotsecond.outside:GandPinNegation)]</target>
				<action>delete</action>
				<deleteElements/>
			</module>
	<!--**************************************************************************************-->
			<module id="removecoordination" class="Action">
				<target>documents.sections.relations.tuples[(args:geneandprotfirst.outside:groupGandP.id:unique==args:geneandprotsecond.outside:groupGandP.id:unique)]</target>
				<action>delete</action>
				<deleteElements/>
			</module>
		</sequence>
	</sequence>

	<!--**************************************************************************************-->
	<!--**************************************************************************************-->
	<!--**************************************************************************************-->
	<module id="mergeAllEntities" class="MergeLayers">
		<sourceLayerNames>
			Gene,
			Protein,
			Protein_family,
			Gene_family,
			RNA,
			groupGandP,
		</sourceLayerNames>
		<targetLayerName>AllEntities</targetLayerName>
	</module>
	<sequence id="outputEntities">
		<module id="gene" class="TabularExport">
			<outDir>output</outDir>
			<files>$</files>
			<fileName>"entities.txt"</fileName>
			<lines>documents.sections.layer:Gene</lines>
			<columns separator=";">
				<element>section.document.@identifiant</element>
				<element>@ne-type</element>
				<element>@form</element>
				<element>@locus_name</element>
				<element>start ^ "-" ^ end</element>
				<element>section.@sectionname</element>
				<element>"http://bibliome.jouy.inra.fr/demo/seedev/alvisir-devel/webapi/search?q="^@locus_name</element>
			</columns>
			<headers>
			"DOCID",
			"EntityType",
			"Form",
			"Normalisation",
			"Offset",
			"Section name",
			"URL"
		</headers>
		</module>
		<module id="protein" class="TabularExport">
			<outDir>output</outDir>
			<files>$</files>
			<fileName>"entities.txt"</fileName>
			<append/>
			<lines>documents.sections.layer:Protein</lines>
			<columns separator=";">
				<element>section.document.@identifiant</element>
				<element>@ne-type</element>
				<element>@form</element>
				<element>@locus_name</element>
				<element>start ^ "-" ^ end</element>
				<element>section.@sectionname</element>
				<element>"http://bibliome.jouy.inra.fr/demo/seedev/alvisir-devel/webapi/search?q="^@locus_name</element>
			</columns>
			<append>true</append>
		</module>
		<module id="proteinfamily" class="TabularExport">
			<outDir>output</outDir>
			<files>$</files>
			<fileName>"entities.txt"</fileName>
			<append/>
			<lines>documents.sections.layer:Protein_family</lines>
			<columns separator=";">
				<element>section.document.@identifiant</element>
				<element>@ne-type</element>
				<element>@form</element>
				<element>@Protein_family_name</element>
				<element>start ^ "-" ^ end</element>
				<element>section.@sectionname</element>
				<element>"http://bibliome.jouy.inra.fr/demo/seedev/alvisir-devel/webapi/search?q="^@Protein_family_name</element>
			</columns>
			<append>true</append>
		</module>
		<module id="genefamily" class="TabularExport">
			<outDir>output</outDir>
			<files>$</files>
			<fileName>"entities.txt"</fileName>
			<append/>
			<lines>documents.sections.layer:Gene_family</lines>
			<columns separator=";">
				<element>section.document.@identifiant</element>
				<element>@ne-type</element>
				<element>@form</element>
				<element>@Gene_family_name</element>
				<element>start ^ "-" ^ end</element>
				<element>section.@sectionname</element>
				<element>"http://bibliome.jouy.inra.fr/demo/seedev/alvisir-devel/webapi/search?q="^@Gene_family_name</element>
			</columns>
			<append>true</append>
		</module>
		<module id="RNA" class="TabularExport">
			<outDir>output</outDir>
			<files>$</files>
			<fileName>"entities.txt"</fileName>
			<append/>
			<lines>documents.sections.layer:RNA</lines>
			<columns separator=";">
				<element>section.document.@identifiant</element>
				<element>@ne-type</element>
				<element>@form</element>
				<element>@miRTarBaseID</element>
				<element>start ^ "-" ^ end</element>
				<element>section.@sectionname</element>
				<element>"http://bibliome.jouy.inra.fr/demo/seedev/alvisir-devel/webapi/search?q="^@miRTarBaseID</element>
			</columns>
			<append>true</append>
		</module>
		<module id="groupGandPexport" class="TabularExport">
			<outDir>output</outDir>
			<files>$</files>
			<fileName>"groupGandPexport.txt"</fileName>
			<lines>documents.sections.layer:groupGandP</lines>
			<columns separator=";">
				<element>section.document.@identifiant</element>
				<element>@ne-type</element>
				<element>@form</element>
				<element>@locus_name</element>
				<element>start ^ "-" ^ end</element>
				<element>section.@sectionname</element>
				<element>"http://bibliome.jouy.inra.fr/demo/seedev/alvisir-devel/webapi/search?q="^@locus_name</element>
			</columns>
		</module>
		<module id="groupNegationexport" class="TabularExport">
			<outDir>output</outDir>
			<files>$</files>
			<fileName>"groupNegation.txt"</fileName>
			<lines>documents.sections.layer:groupNegation</lines>
			<columns separator=";">
				<element>section.document.@identifiant</element>
				<element>@ne-type</element>
				<element>@form</element>
				<element>start ^ "-" ^ end</element>
				<element>section.@sectionname</element>

			</columns>
		</module>
		<module id="wordsexport" class="TabularExport">
			<outDir>output</outDir>
			<files>$</files>
			<fileName>"words.txt"</fileName>
			<lines>documents.sections.layer:words</lines>
			<columns separator=";">
				<element>section.document.@identifiant</element>
				<element>@form</element>
				<element>@pos</element>
				<element>start ^ "-" ^ end</element>
			</columns>
		</module>
	</sequence>
	


	<!--**************************************************************************************-->
	<!--**************************************************************************************-->
	<!--**************************************************************************************-->
	<!--**************************************************************************************-->
	<sequence id="dependencies">
		<module id="index-words" class="Action">
			<target>documents.sections.layer:sentences[@name != "author"]</target>
			<action>id:enumerate:word-index(inside:words)</action>
			<setFeatures/>
		</module>
		<module id="index-sentences" class="Action">
			<target>documents.sections[@name != "author"]</target>
			<action>id:enumerate:sentence-index(layer:sentences)</action>
			<setFeatures/>
		</module>
		<module id="index-threesentences" class="Action">
			<target>documents.sections[@name != "author"]</target>
			<action>id:enumerate:threesentence-index(layer:threesent)</action>
			<setFeatures/>
		</module>
		<module id="sentences" class="TabularExport">
			<outDir>corpus/output</outDir>
			<files>$</files>
			<fileName>"sentences.txt"</fileName>
			<lines>documents.sections.layer:sentences[@name != "author"]</lines>
			<columns separator=";">
		  section.document.@id;
		  section.@name;
		  @sentence-index;
		  start ^ "-" ^ end;
		  str:replace(@form, "\n", " ")
		</columns>
			<headers>
		  "DOCUMENT",
		  "SECTION",
		  "SENTENCE",
		  "OFFSET",
		  "FORM"
		</headers>
		</module>
		<module id="dependencies" class="TabularExport">
			<outDir>output</outDir>
			<files>$</files>
			<fileName>"dependencies.txt"</fileName>
			<lines>documents.sections[@name != "author"].relations:dependencies.tuples</lines>
			<columns separator=";">
	  relation.section.document.@id;
	  relation.section.@name;
	  args:sentence.@sentence-index;
	  @label;
	  args:head.@word-index;
	  args:head.@form;
	  args:head.@lemma;
	  args:head.@pos;
	  args:head.start ^ "-" ^ args:head.end;
	  args:dependent.@word-index;
	  args:dependent.@form;
	  args:dependent.@lemma;
	  args:dependent.@pos;
	  args:dependent.start ^ "-" ^ args:dependent.end
	</columns>
			<headers>
	  "DOCUMENT",
	  "SECTION",
	  "SENTENCE",
	  "LABEL",
	  "HEAD INDEX",
	  "HEAD FORM",
	  "HEAD LEMMA",
	  "HEAD POS",
	  "HEAD OFFSET",
	  "DEPENDENT INDEX",
	  "DEPENDENT FORM",
	  "DEPENDENT LEMMA",
	  "DEPENDENT POS",
	  "DEPENDENT OFFSET"
	</headers>
		</module>
	</sequence>
	<!--**************************************************************************************-->
	<!--**************************************************************************************-->
	<!--***********************AlvisIRIndexer*************************************************-->
	<!--**************************************************************************************-->
	<!--**************************************************************************************-->
	<!--**************************************************************************************-->
	<sequence id="AlvisIRIndexer">
		<module id="AlvisIRindex" class="AlvisIRIndexer">
			<indexDir inhibitCheck="true">configuration/index</indexDir>
			<tokenPositionGap>1024</tokenPositionGap>
			<fieldNames>title,abstract,alltext,author,full-author,pmid,url,doi,year,journal,mesh</fieldNames>
			<relations>
				<interact>geneandprotfirst,geneandprotsecond</interact>
			</relations>
			<propertyKeys/>
			<documents>
				<fields normalization="ascii,lower">
					<instances>sections[@sectionname=="title"] | sections[@sectionname=="abstract"]| sections[@sectionname=="alltext"]| sections[@sectionname=="journal"]| sections[@sectionname=="year"]| sections[@sectionname=="doi"]</instances>
					<field-name>@sectionname</field-name>
					<annotations>
						<instances>layer:threesent</instances>
						<text>"{threesent}"</text>
					</annotations>
					<annotations>
						<instances>layer:sentences</instances>
						<text>"{sent}"</text>
					</annotations>
					<annotations>
						<instances>layer:Protein</instances>
						<text>"{protein}" ^ @locus_name ^ "/"</text>
					</annotations>
					<annotations>
						<instances>layer:Gene</instances>
						<text>"{gene}" ^ @locus_name ^ "/"</text>
					</annotations>
					<annotations>
						<instances>layer:Gene_family</instances>
						<text>"{gene_family}" ^ @Gene_family_name ^ "/"</text>
					</annotations>
					<annotations>
						<instances>layer:Protein_family</instances>
						<text>"{protein_family}" ^ @Protein_family_name ^ "/"</text>
					</annotations>
					<annotations>
						<instances>layer:RNA</instances>
						<text>"{rna}" ^ @miRTarBaseID ^ "/"</text>
					</annotations>
					<annotations>
						<instances>relations:CooccurrenceInteraction.tuples</instances>
						<fragments>
							<instances>sort:ival(args, start)</instances>
						</fragments>
						<text>"{interact}{protein}" ^ args:geneandprotfirst.@locus_name ^ "/~{protein}" ^ args:geneandprotsecond.@locus_name ^ "/"</text>
						<arguments>
							<geneandprotfirst>args:geneandprotfirst.id:unique</geneandprotfirst>
							<geneandprotsecond>args:geneandprotsecond.id:unique</geneandprotsecond>
						</arguments>
					</annotations>
					<annotations>
						<instances>relations:CooccurrenceInteraction.tuples</instances>
						<fragments>
							<instances>sort:ival(args, start)</instances>
						</fragments>
						<text>"{interact}{gene}" ^ args:geneandprotfirst.@locus_name ^ "/~{protein}" ^ args:geneandprotsecond.@locus_name ^ "/"</text>
						<arguments>
							<geneandprotfirst>args:geneandprotfirst.id:unique</geneandprotfirst>
							<geneandprotsecond>args:geneandprotsecond.id:unique</geneandprotsecond>
						</arguments>
					</annotations>
					<annotations>
						<instances>relations:CooccurrenceInteraction.tuples</instances>
						<fragments>
							<instances>sort:ival(args, start)</instances>
						</fragments>
						<text>"{interact}{protein}" ^ args:geneandprotfirst.@locus_name ^ "/~{gene}" ^ args:geneandprotsecond.@locus_name ^ "/"</text>
						<arguments>
							<geneandprotfirst>args:geneandprotfirst.id:unique</geneandprotfirst>
							<geneandprotsecond>args:geneandprotsecond.id:unique</geneandprotsecond>
						</arguments>
					</annotations>
					<annotations>
						<instances>relations:CooccurrenceInteraction.tuples</instances>
						<fragments>
							<instances>sort:ival(args, start)</instances>
						</fragments>
						<text>"{interact}{gene}" ^ args:geneandprotfirst.@locus_name ^ "/~{gene}" ^ args:geneandprotsecond.@locus_name ^ "/"</text>
						<arguments>
							<geneandprotfirst>args:geneandprotfirst.id:unique</geneandprotfirst>
							<geneandprotsecond>args:geneandprotsecond.id:unique</geneandprotsecond>
						</arguments>
					</annotations>
				</fields>
				<fields>
					<instances>sections:author</instances>
				</fields>
				<fields>
					<instances>sections:author</instances>
					<field-name>"full-author"</field-name>
					<keyword>contents</keyword>
				</fields>
				<fields>
					<instances>$[document.@url]</instances>
					<field-name>"url"</field-name>
					<keyword>document.@url</keyword>
				</fields>
				<fields>
					<instances>$[@pmid]</instances>
					<field-name>"pmid"</field-name>
					<keyword>@id</keyword>
				</fields>
				<fields>
					<instances>$[@doi]</instances>
					<field-name>"doi"</field-name>
					<keyword>@doi</keyword>
				</fields>
				<fields>
					<instances>$[@year]</instances>
					<field-name>"year"</field-name>
					<keyword>@PY</keyword>
				</fields>
				<fields>
					<instances>$[@journal]</instances>
					<field-name>"journal"</field-name>
					<keyword>@journal</keyword>
				</fields>
			</documents>
		</module>
	</sequence>
	<!--**************************************************************************************-->
	<!--**************************************************************************************-->
	<!--**************************************************************************************-->
	<!--Visualisation html -->
	<!--**************************************************************************************-->
	<!--**************************************************************************************-->
	<!--**************************************************************************************-->
<!--	<module id="html" class="QuickHTML">-->
<!--		<outDir>output/Entities-html</outDir>-->
<!--		<classFeature>ne-type</classFeature>-->
<!--		<layers>groupGandP</layers>-->
<!--		<colors>#d7d7d7, #ff9966</colors>-->
<!--	</module>-->
	<module id="relations" class="TabularExport">
		<outDir>output</outDir>
		<files>$</files>
		<fileName>"relationsgroup.txt"</fileName>
		<lines>documents.sections.relations:CooccurrenceInteraction.tuples</lines>
		<columns separator=";">
	section.document.@id;
	section.@name;
	args:geneandprotfirst.@form;
	args:geneandprotfirst.@ne-type;
	args:geneandprotfirst.@locus_name;
	@TYPE;

			<!--args:DNA.@canonical-name;-->
	args:geneandprotsecond.@form;
	args:geneandprotsecond.@ne-type;
	args:geneandprotsecond.@locus_name;
	args:geneandprotfirst.outside:sentences

			<!--args:DNA.@concept-name;-->
		</columns>
	</module>
	<module id="success" class="TabularExport">
		<outDir>output</outDir>
		<files>$</files>
		<fileName>"success.txt"</fileName>
		<lines>documents</lines>
		<columns>@identifiant</columns>
	</module>
</alvisnlp-plan>
