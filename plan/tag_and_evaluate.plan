<!--
Copyright 2016 Institut National de la Recherche Agronomique
Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at
        http://www.apache.org/licenses/LICENSE-2.0
Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License. -->

<alvisnlp-plan id="entities">

<sequence id="read">

  <module id="read" class="BioNLPSTReader">
    <a1Dir>&italic-dir;</a1Dir>
    <textDir>&txtdir;</textDir>
    <textBoundAsAnnotations>true</textBoundAsAnnotations>
  </module>

</sequence>

<!-- ******* -->
<!--Name entity recognition-->
<!-- *******  -->
	<sequence id="stanford">
		<module id="stanford" class="StanfordNER">
		<!--	<classifierFile>/alvisnlp/psoft/stanford-ner-2014-06-16/classifiers/english.all.3class.distsim.crf.ser.gz</classifierFile>-->
			<classifierFile>/bibdev/install/stanford-ner-3.4/classifiers/english.all.3class.distsim.crf.ser.gz</classifierFile>
			<labelFeatureName>Namelabel</labelFeatureName>
			<targetLayerName>stanford</targetLayerName>
			<searchInContents/>
		</module>
		<module id="persons" class="Action">
			<target>documents.sections.layer:stanford[@Namelabel == "PERSON"]</target>
			<action>add:persons</action>
			<addToLayer/>
		</module>
	</sequence>


<!-- ******* -->
<!--projection of lexicon words on the text-->
<!-- *******  -->
	<sequence id="named-entities">
	<!-- *******  -->
	<!-- Projection of proteins and genes from the lexicon on the text -->
	<!-- *******  -->
		<module id="protein" class="TabularProjector">
			<dictFile>resources/gene_aliases_20130831_TAIR_extended.txt</dictFile>
			<targetLayerName>protein1</targetLayerName>
			<valueFeatures>locus_name,symbol,full_name</valueFeatures>
			<caseInsensitive>true</caseInsensitive>
			<keyIndex>0,1,2</keyIndex>
			<!-- <allowJoined>true</allowJoined> -->
			<!-- <joinDash>true</joinDash> -->
			<constantAnnotationFeatures>ne-type=Protein</constantAnnotationFeatures>
			<!-- <skipConsecutiveWhitespaces>true</skipConsecutiveWhitespaces> -->
		</module>
		<module id="merge_protein" class="MergeLayers">
			<sourceLayerNames>protein1,protein2,protein3</sourceLayerNames>
			<targetLayerName>Protein</targetLayerName>
		</module>
		<module id="overlapsprotein" class="RemoveOverlaps">
			<layerName>Protein</layerName>
		</module>
		<module id="gene" class="Action">
			<target>documents.sections.layer:Protein[outside:html[@tag == "em" or @tag == "i"]]</target>
			<action>remove:Protein | add:gene1 | set:feat:ne-type("Gene")</action>
			<removeFromLayer/>
			<addToLayer/>
			<setFeatures/>
			<constantAnnotationFeatures>ne-type=Gene</constantAnnotationFeatures>
		</module>
<!--		<module id="gene-italic" class="Action">-->
<!--			<target>documents.sections.layer:Protein[outside:html[@tag == "em" or @tag == "i"]]</target>-->
<!--			<action>remove:Protein | add:Gene | set:feat:ne-type("Gene")</action>-->
<!--			<removeFromLayer/>-->
<!--			<addToLayer/>-->
<!--			<setFeatures/>-->
<!--			<constantAnnotationFeatures>ne-type=Gene</constantAnnotationFeatures>-->
<!--		</module>-->

	<module id="gene-italic" class="Action">
		<target>documents.sections.layer:Protein[span:Italic]</target>
		<action>remove:Protein | add:gene1 | set:feat:ne-type("Gene")</action>
		<removeFromLayer/>
		<addToLayer/>
		<setFeatures/>
		<constantAnnotationFeatures>ne-type=Gene</constantAnnotationFeatures>
	</module>
	<!-- *******  -->
	<!-- Projection of proteins and genes  families from the lexicon on the text -->
	<!-- *******  -->
		<module id="Protein_family" class="TabularProjector">
			<dictFile>resources/gene_families_lexicon.txt</dictFile>
			<targetLayerName>Protein_family</targetLayerName>
			<valueFeatures>Protein_family_name</valueFeatures>
			<keyIndex>0</keyIndex>
			<skipEmpty>true</skipEmpty>
			<constantAnnotationFeatures>ne-type=Protein_family</constantAnnotationFeatures>
		</module>
		<module id="overlapsprotein-family" class="RemoveOverlaps">
			<layerName>Protein_family</layerName>
		</module>
		<module id="Gene_family" class="Action">
			<target>documents.sections.layer:Protein_family[outside:html[@tag == "em" or @tag == "i"]]</target>
			<action>remove:Protein_family | add:Gene_family | set:feat:ne-type("Gene_family")|set:feat:Gene_family_name(@Protein_family_name)</action>
			<removeFromLayer/>
			<addToLayer/>
			<setFeatures/>
			<constantAnnotationFeatures>ne-type=Gene_family</constantAnnotationFeatures>
		</module>
		<module id="overlapsgene-family" class="RemoveOverlaps">
			<layerName>Gene_family</layerName>
		</module>
	<!-- *******  -->
	<!-- Projection of RNA from the lexicon on the text -->
	<!-- *******  -->
		<module id="RNAmiRTarBase" class="TabularProjector">
			<dictFile>resources/ath_MTI_extended.txt</dictFile>
			<targetLayerName>rna1</targetLayerName>
			<valueFeatures>miRTarBaseID,miRNA,miRNAcut,Species(miRNA),TargetGene,TargetGene(EntrezID),Species(TargetGene),Experiments,SupportType,References(PMID)</valueFeatures>
			<caseInsensitive>true</caseInsensitive>
			<keyIndex>0,1,2</keyIndex>
			<constantAnnotationFeatures>ne-type=RNA</constantAnnotationFeatures>
		</module>
		<module id="mergerna" class="MergeLayers">
			<sourceLayerNames>rna1,rna2,rna3</sourceLayerNames>
			<targetLayerName>RNA</targetLayerName>
		</module>
		<module id="renamerna" class="Action">
			<target>documents.sections.layer:RNA</target>
			<action>set:feat:ne-type("RNA")</action>
			<setFeatures/>
		</module>
		<module id="overlapsrna" class="RemoveOverlaps">
			<layerName>RNA</layerName>
		</module>
	<!-- *******  -->
	<!-- Projection of stop words from the lexicon on the text -->
	<!-- *******  -->
		<module id="stopwordsprojector" class="TabularProjector">
			<dictFile>resources/stopwords_EN.txt</dictFile>
			<targetLayerName>stopwords</targetLayerName>
			<valueFeatures>stopwords</valueFeatures>
			<constantAnnotationFeatures>ne-type=stopwords</constantAnnotationFeatures>
			<caseInsensitive>true</caseInsensitive>
		</module>
		<module id="stopwords" class="Action">
			<target>documents.sections.layer:Protein[span:stopwords] | documents.sections.layer:Gene[span:stopwords] | documents.sections.layer:Gene_family[span:stopwords] | documents.sections.layer:Protein_family[span:stopwords] | documents.sections.layer:RNA[span:stopwords] </target>
			<action>delete</action>
			<deleteElements/>
		</module>
		<module id="standfordwords" class="Action">
			<target>documents.sections.layer:Protein[span:persons] | documents.sections.layer:Gene[span:persons] | documents.sections.layer:Gene_family[span:persons] | documents.sections.layer:Protein_family[span:persons] | documents.sections.layer:RNA[span:persons] </target>
			<action>delete</action>
			<deleteElements/>
		</module>
	<!-- *******  -->
	<!-- Detection of bibliographic references -->
	<!-- *******  -->
		<module id="refbiblio" class="RegExp">
			<!--type (ABD ., et al 2000)-->
			<pattern>\(([\p{L}-\s\u00a0\.,]+[\s\u00a0]\d{4}[a-zA-Z]?[\u00a0\s;]*)+?\)</pattern>
			<!--		<pattern>\(\w[^\)&lt;&gt;=\/\\]*?\s\d{4}[^\)&lt;&gt;=\/\\]*?\)</pattern> -->
			<targetLayerName>refbiblio</targetLayerName>
			<constantAnnotationFeatures>ne-type=refbiblio</constantAnnotationFeatures>
		</module>
	<!-- *******  -->
	<!-- transformation Gene to Gentoype -->
	<!-- *******  -->
		<module id="genotype-lowercase" class="Action">
			<target>documents.sections.layer:Gene[@form =~"^[a-z]+[0-9]?"]</target>
			<action>remove:Gene | add:Genotype | set:feat:ne-type("Genotype")</action>
			<removeFromLayer/>
			<addToLayer/>
			<setFeatures/>
			<constantAnnotationFeatures>ne-type=Genotype</constantAnnotationFeatures>
		</module>
		<module id="genotype2-lowercase" class="Action">
			<target>documents.sections.layer:Protein[@form =~"^[a-z]+[0-9]?"]</target>
			<action>remove:Protein | add:Genotype | set:feat:ne-type("Genotype")</action>
			<removeFromLayer/>
			<addToLayer/>
			<setFeatures/>
			<constantAnnotationFeatures>ne-type=Genotype</constantAnnotationFeatures>
		</module>
		<!-- *******  -->
		<!-- Merge off fixed entities -->
		<!-- *******  -->
		<module id="merge" class="MergeLayers">
			<sourceLayerNames>Gene,Gene_family,Protein,Protein_family,RNA</sourceLayerNames>
			<targetLayerName>fixed</targetLayerName>
		</module>
		<module id="overlapsfixed" class="RemoveOverlaps">
			<layerName>fixed</layerName>
		</module>
		<module id="renamefixed" class="Action">
			<target>documents.sections.layer:fixed</target>
			<action>set:feat:pos("NN")</action>
			<setFeatures/>
		</module>
		<module id="mergeundesirable" class="MergeLayers">
			<sourceLayerNames>persons,refbiblio,stopwords</sourceLayerNames>
			<targetLayerName>fixedundesirable</targetLayerName>
		</module>
		<module id="mergeAllfixed" class="MergeLayers">
			<sourceLayerNames>fixed,fixedundesirable</sourceLayerNames>
			<targetLayerName>fixedAll</targetLayerName>
		</module>
		<module id="overlaps" class="RemoveOverlaps">
			<layerName>fixedAll</layerName>
			<!--		<removeIncluded>false</removeIncluded>-->
		</module>
	</sequence>

<!-- *******  -->
<!-- Export of fixed entities Gene and Protein -->
<!-- *******  -->
<sequence id="export-fixed-entities">
	<module id="gene1" class="TabularExport">
		<outDir>output</outDir>
		<files>$</files>
		<fileName>"gene.txt"</fileName>
		<lines>documents.sections.layer:Gene</lines>
		<columns separator=";">
			<element>section.document.@identifiant</element>
			<element>@ne-type</element>
			<element>@form</element>
			<element>@locus_name</element>
			<element>start ^ "-" ^ end</element>
			<element>section.@sectionname</element>
			<element>"http://bibliome.jouy.inra.fr/demo/seedev/alvisir-devel/webapi/search?q="^@locus_name</element>
		</columns>
		<headers>
			"DOCID",
			"EntityType",
			"Form",
			"Normalisation",
			"Offset",
			"Section name",
			"URL"
		</headers>
	</module>
	<module id="protein1" class="TabularExport">
		<outDir>output</outDir>
		<files>$</files>
		<fileName>"gene.txt"</fileName>
		<append/>
		<lines>documents.sections.layer:Protein</lines>
		<columns separator=";">
			<element>section.document.@identifiant</element>
			<element>@ne-type</element>
			<element>@form</element>
			<element>@locus_name</element>
			<element>start ^ "-" ^ end</element>
			<element>section.@sectionname</element>
			<element>"http://bibliome.jouy.inra.fr/demo/seedev/alvisir-devel/webapi/search?q="^@locus_name</element>
		</columns>
		<append>true</append>
	</module>

</sequence>

<!--**************************************************************************************-->
<!--**************************************************************************************-->
<!--*****************Word and sentences segmentation**************************************-->
<!--**************************************************************************************-->
<!--**************************************************************************************-->
<!--**************************************************************************************-->
	<module id="words" class="WoSMig">
		<balancedPunctuations>()[]{}""</balancedPunctuations>
		<punctuations>?.!;,:-&#x2014;&#x2013;&#x2012;&#x002D;&#x2010;&#x2011;&#x00AD;&#x2015;&#x2043;&#x2212;&#x02D7;&#x207B;&#x208B;</punctuations>
		<targetLayerName>words</targetLayerName>
		<fixedFormLayerName>fixed</fixedFormLayerName>
	</module>

	<module id="sentences" class="SeSMig">
		<strongPunctuations>?.!</strongPunctuations>
		<targetLayerName>sentences</targetLayerName>
	</module>
	<module id="SentencePattern" class="PatternMatcher">
		<layerName>sentences</layerName>
		<pattern>
	[true]
	[true]? 
	[true]?       
                </pattern>
		<actions>
			<createAnnotation layer="threesent"/>
			<setFeatures ne-type="threesent"/>
		</actions>
	</module>


<!--**************************************************************************************-->
<!--**************************************************************************************-->
<!--**************************************************************************************-->
<!--*************************dash detection***********************************************-->
<!--**************************************************************************************-->
<!--**************************************************************************************-->
	<sequence id="dash list">
		<module id="dash" class="PatternMatcher">
			<layerName>words</layerName>
			<pattern> 
			[@form=~"^\\u2014$"]? 
<!-- long dash-->
			[@form=~"^\\u2013$"]? 
<!-- middle dash-->
			[@form=~"^\\u2012$"]? 
<!-- numerical dash-->
			[@form=~"^\\u002D$"]? 
<!-- minus sign-->
			[@form=~"^\\u2010$"]? 
<!-- hyphen-->
			[@form=~"^\\u2011$"]? 
<!-- unbreakable hyphen-->
			[@form=~"^\\u00AD$"]? 
<!-- conditional hyphen-->
			[@form=~"^\\u2015$"]? 
<!-- horizontal bar-->
			[@form=~"^\\u2043$"]? 
<!-- hyphenated chip-->
			[@form=~"^\\u2212$"]? 
<!-- minus sign-->
			[@form=~"^\\u02D7$"]? 
<!-- letter amending minus sign-->
			[@form=~"^\\u207B$"]? 
<!-- superscripts minus sign-->
			[@form=~"^\\u208B$"]? 
<!-- subscripts minus sign -->
			</pattern>
			<actions>
				<createAnnotation layer="Dash"/>
				<setFeatures ne-type="Dash"/>
			</actions>
			<constantAnnotationFeatures>ne-type=Dash</constantAnnotationFeatures>
		</module>
		<module id="Dash-overlaps" class="RemoveOverlaps">
			<layerName>Dash</layerName>
		</module>
	</sequence>


	<!--**************************************************************************************-->
	<!--  Pos Tagger -->
	<!--**************************************************************************************-->
<!--	XXXXX A decommenter après -->
<!--	<module id="tt-pos-tag" class="TreeTagger">-->
<!--		<treeTaggerExecutable>/alvisnlp/psoft/treetagger/bin/tree-tagger</treeTaggerExecutable>-->
<!--		<parFile>/alvisnlp/psoft/treetagger/lib/english.par</parFile>-->
<!--		<noUnknownLemma/>-->
<!--	</module>-->
	
	<module id="tt-pos-tag" class="TreeTagger">
		<treeTaggerExecutable>/bibdev/install/tree-tagger-3.2/bin/tree-tagger</treeTaggerExecutable>
		<parFile>/bibdev/install/tree-tagger-3.2/lib/english.par</parFile>
		<noUnknownLemma/>
	</module>
	
	<!--**************************************************************************************-->	
	
<sequence>
        <module id="GenePattern" class="PatternMatcher">
                <layerName>words</layerName>
                <pattern>
        (Groupe1:[@ne-type=="Protein"])
	[true]?
	[true]? 
	[true]? 
	[true]?       
        [@lemma=="gene"]
                </pattern>
                <actions>
                        <addToLayer group="Groupe1" layer="gene2"/>
			<removeAnnotations group="Groupe1" layer="Protein"/>
                </actions>
        </module>

        <module id="GenePattern2" class="PatternMatcher">
                <layerName>words</layerName>
                <pattern>
        [@lemma=="gene"]
	[true]?
	[true]? 
	[true]? 
	[true]?       
        (Groupe2:[@ne-type=="Protein"])
                </pattern>
                <actions>
                        <addToLayer group="Groupe2" layer="gene3"/>
			<removeAnnotations group="Groupe2" layer="Protein"/>
                </actions>
        </module>

		<module id="mergeGene" class="MergeLayers">
			<sourceLayerNames>gene1,gene2,gene3</sourceLayerNames>
			<targetLayerName>Gene</targetLayerName>
		</module>
		<module id="overlapsgene" class="RemoveOverlaps">
			<layerName>Gene</layerName>
		</module>
		<!-- ENLEVE TOUS LES Overlaps entre Gene et Protein -->
		<module id="generename" class="Action">
			<target>documents.sections.layer:Gene</target>
			<action>set:feat:ne-type("Gene")</action>
			<setFeatures/>
		</module>
		<module id="proteinrename" class="Action">
			<target>documents.sections.layer:Protein</target>
			<action>set:feat:ne-type("Protein")</action>
			<setFeatures/>
		</module>
		<module id="overlapsprotein2" class="RemoveOverlaps">
			<layerName>Protein</layerName>
		</module>
		<module id="geneandproteinoverlaps" class="Action">
			<target>documents.sections.layer:Protein[overlapping:Gene]</target>
			<action>delete</action>
			<deleteElements/>
		</module>
		<module id="geneandproteinoverlaps2" class="Action">
			<target>documents.sections.layer:Gene[overlapping:Protein]</target>
			<action>delete</action>
			<deleteElements/>
		</module>
	</sequence>
<!--**************************************************************************************-->

	<sequence id="Proteinfamilypatterns">
		<module id="ProteinfamPattern" class="PatternMatcher">
			<layerName>words</layerName>
			<pattern>
	[@ne-type=="Protein"]
	[true]?
	[true]?      
        ([@lemma=="like"]|[@lemma=="family"])
                </pattern>
			<actions>
				<!--<addToLayer layer="Protein_family"/>-->
				<createAnnotation layer="Protein_family" />
				<setFeatures ne-type="Protein_family"/>
			</actions>
			<constantAnnotationFeatures>ne-type=Protein_family</constantAnnotationFeatures>
		</module>
		<module id="Proteinfamilylocusname" class="Action">
			<target>documents.sections.layer:Protein_family[inside:Protein]</target>
			<action>set:feat:Protein_family_name(inside:Protein.@symbol ^ "_family")</action>
			<setFeatures/>
		</module>
	</sequence>
	<sequence id="Genefamilypatterns">
		<module id="GenefamPattern" class="PatternMatcher">
			<layerName>words</layerName>
			<pattern>
	[@ne-type=="Gene"]
	[true]?
	[true]?      
        ([@lemma=="like"]|[@lemma=="family"])
                </pattern>
			<actions>
				<createAnnotation layer="Gene_family" />
				<setFeatures ne-type="Gene_family"/>
			</actions>
			<constantAnnotationFeatures>ne-type=Gene_family</constantAnnotationFeatures>
		</module>
		<module id="Genefamilylocusname" class="Action">
			<target>documents.sections.layer:Gene_family[inside:Gene]</target>
			<action>set:feat:Gene_family_name(inside:Gene.@symbol ^ "_family")</action>
			<setFeatures/>
		</module>
	</sequence>

	<module id="mergeAllEntities" class="MergeLayers">
		<sourceLayerNames>
			Gene,
			Protein,
			Protein_family,
			Gene_family,
			RNA,
			groupGandP,
		</sourceLayerNames>
		<targetLayerName>AllEntities</targetLayerName>
	</module>

 <!-- Enumerate entities -->
  <module id="id-ent" class="Action">
      <target>documents.sections</target>
      <action>id:enumerate:tid(layer:AllEntities)</action>
    <setFeatures/>
    </module>

  <!-- BioNLP-ST format -->
  <module id="ExportInFiles2" class="TabularExport">
		<outDir>&outdir;/a1dir</outDir>
		<files>documents</files>
		<fileName>str:basename(@id) ^ ".a1"</fileName>
			<lines>document.sections.layer:AllEntities</lines>
		<columns separator=";">
			<element>"T" ^ @tid</element>
			<element>@ne-type ^ " " ^ start ^ " " ^ end</element>
			<element>str:seds(@form,"\\s+"," ")</element>
		</columns>

  </module>

  <import file="plan/compareAnnotationsNE.plan"/>
 
</alvisnlp-plan>
